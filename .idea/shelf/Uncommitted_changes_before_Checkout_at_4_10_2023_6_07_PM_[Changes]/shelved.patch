Index: app/src/main/java/com/example/passmeprofessor/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.passmeprofessor\r\n\r\nimport android.R.attr.button\r\nimport android.graphics.Bitmap\r\nimport android.graphics.Canvas\r\nimport android.os.Bundle\r\nimport android.animation.ObjectAnimator\r\nimport android.annotation.SuppressLint\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.GestureDetector\r\nimport android.view.MotionEvent\r\nimport android.view.View\r\nimport android.widget.ImageView\r\nimport androidx.appcompat.app.AppCompatActivity\r\n\r\nimport android.os.CountDownTimer\r\nimport android.widget.Button\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n    private lateinit var originalBitmap: Bitmap\r\n    private fun captureViewBitmap(view: View): Bitmap {\r\n        val bitmap = Bitmap.createBitmap(view.width, view.height, Bitmap.Config.ARGB_8888)\r\n        val canvas = Canvas(bitmap)\r\n        val bgDrawable = view.background\r\n        if (bgDrawable != null) {\r\n            bgDrawable.draw(canvas)\r\n        } else {\r\n            canvas.drawColor(android.graphics.Color.WHITE)\r\n        }\r\n        view.draw(canvas)\r\n        return bitmap\r\n    }\r\n\r\n    private fun applyBlurToBackground() {\r\n        val rootView = findViewById<View>(android.R.id.content)\r\n        val blurredBackground = findViewById<ImageView>(R.id.blurred_background)\r\n\r\n        originalBitmap = captureViewBitmap(rootView)\r\n        val mainActivityBitmap = captureViewBitmap(rootView)\r\n        val blurredBitmap = BlurBuilder.blur(this, mainActivityBitmap)\r\n        blurredBackground.setImageBitmap(blurredBitmap)\r\n    }\r\n\r\n    private fun removeBlurFromBackground() {\r\n        val blurredBackground = findViewById<ImageView>(R.id.blurred_background)\r\n        blurredBackground.setImageBitmap(originalBitmap)\r\n    }\r\n\r\n\r\n    private lateinit var game: Game\r\n\r\n    private lateinit var gestureDetector: GestureDetector\r\n    private var initialX = 450.0F\r\n    private lateinit var paperView: ImageView\r\n    private lateinit var animator: ObjectAnimator\r\n    private val LEFT_SWIPE_THRESH: Float = 200.0f\r\n    private val RIGHT_SWIPE_THRESH: Float = 500.0f\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        // Set the screen to main screen\r\n        setContentView(R.layout.activity_main)\r\n        var blurred = true\r\n        val timerText = findViewById<TextView>(R.id.timerText)\r\n        //var timer =  Timer(95, timerText)\r\n\r\n        val blurButton = findViewById<Button>(R.id.blurButton)\r\n        blurButton.setOnClickListener {\r\n            blurred = if(blurred){\r\n                removeBlurFromBackground()\r\n                false\r\n            } else {\r\n                applyBlurToBackground()\r\n                true\r\n            }\r\n        }\r\n\r\n        val rootView = findViewById<View>(android.R.id.content)\r\n        rootView.post {\r\n            applyBlurToBackground()\r\n        }\r\n\r\n\r\n        var timer = Timer(95, timerText)\r\n        val paperSprite = Paper(findViewById<ImageView>(R.id.paper))\r\n        paperSprite.generateRandomPaper()\r\n        paperView = findViewById(R.id.paper)\r\n        //Create game instance\r\n        game = Game()\r\n        //Build first paper in game instance with ImageView paper\r\n        game.buildPaper(paperView)\r\n        //Build timer in game instance with TextView timerText and total game time\r\n        game.buildTimer(10, findViewById(R.id.timerText))\r\n        //Build rubric in game instance with rubric text views for A,B,C,D, and E\r\n        game.buildRubric(\r\n            findViewById(R.id.rubric_a),\r\n            findViewById(R.id.rubric_b),\r\n            findViewById(R.id.rubric_c),\r\n            findViewById(R.id.rubric_d),\r\n            findViewById(R.id.rubric_e)\r\n        )\r\n\r\n        gestureDetector = GestureDetector(this, object : HorizontalSwipeListener() {\r\n            override fun onSwipeHorizontal(diffX: Float) {\r\n                paperView.x = initialX + diffX\r\n            }\r\n        })\r\n\r\n        paperView.setOnTouchListener { _, motionEvent ->\r\n            gestureDetector.onTouchEvent(motionEvent)\r\n            if (motionEvent.action == MotionEvent.ACTION_UP) {\r\n                // Get x position of paper when it is released\r\n                val releasedAt = paperView.x\r\n\r\n                if (releasedAt <= LEFT_SWIPE_THRESH) {\r\n                    Log.d(\"Gestures: \", \"LEFT SWIPE DETECTED!\")\r\n                    game.fireSwipeEvent(SwipeEvent(this, false))\r\n                } else if (releasedAt >= RIGHT_SWIPE_THRESH) {\r\n                    Log.d(\"Gestures: \", \"RIGHT SWIPE DETECTED!\")\r\n                    game.fireSwipeEvent(SwipeEvent(this, true))\r\n                } else {\r\n                    //If user doesn't swipe far enough to register a swipe animate the paper returning to center and don't change player score\r\n                    Log.d(\"Gestures: \", \"NO SWIPE DETECTED!\")\r\n                    animateImageViewToInitialPosition()\r\n                    return@setOnTouchListener true\r\n                }\r\n                paperView.visibility = View.INVISIBLE\r\n                Log.d(\"Released at: \", \"$releasedAt\")\r\n                paperView.x = initialX\r\n                paperView.visibility = View.VISIBLE\r\n            }\r\n            true\r\n        }\r\n\r\n        game.setNewPaper()\r\n    }\r\n\r\n    private fun animateImageViewToInitialPosition() {\r\n        animator = ObjectAnimator.ofFloat(paperView, \"x\", initialX)\r\n        animator.duration = 300\r\n        animator.start()\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/passmeprofessor/MainActivity.kt b/app/src/main/java/com/example/passmeprofessor/MainActivity.kt
--- a/app/src/main/java/com/example/passmeprofessor/MainActivity.kt	
+++ b/app/src/main/java/com/example/passmeprofessor/MainActivity.kt	
@@ -3,7 +3,6 @@
 import android.R.attr.button
 import android.graphics.Bitmap
 import android.graphics.Canvas
-import android.os.Bundle
 import android.animation.ObjectAnimator
 import android.annotation.SuppressLint
 import android.os.Bundle
